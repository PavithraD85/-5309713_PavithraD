#include <stdio.h>
#include <stdlib.h>

typedef struct DoublyLinkedListNode {
    int data;
    struct DoublyLinkedListNode* next;
    struct DoublyLinkedListNode* prev;
} DoublyLinkedListNode;

DoublyLinkedListNode* createNode(int data) {
    DoublyLinkedListNode* node = (DoublyLinkedListNode*)malloc(sizeof(DoublyLinkedListNode));
    node->data = data;
    node->next = NULL;
    node->prev = NULL;
    return node;
}

void insertEnd(DoublyLinkedListNode** head, int data) {
    DoublyLinkedListNode* node = createNode(data);
    if (*head == NULL) {
        *head = node;
        return;
    }
    DoublyLinkedListNode* temp = *head;
    while (temp->next != NULL) {
        temp = temp->next;
    }
    temp->next = node;
    node->prev = temp;
}


void printList(DoublyLinkedListNode* head) {
    DoublyLinkedListNode* temp = head;
    while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->next;
    }
    printf("\n");
}


DoublyLinkedListNode* reverse(DoublyLinkedListNode* head) {
    DoublyLinkedListNode* current = head;
    DoublyLinkedListNode* temp = NULL;

    while (current != NULL) {
        temp = current->prev;
        current->prev = current->next;
        current->next = temp;
        current = current->prev;
    }

    if (temp != NULL) {
        head = temp->prev;
    }

    return head;
}


int main() {
    int n, val;
    scanf("%d", &n);

    DoublyLinkedListNode* head = NULL;
    for (int i = 0; i < n; i++) {
        scanf("%d", &val);
        insertEnd(&head, val);
    }

    head = reverse(head);
    printList(head);

    return 0;
}
